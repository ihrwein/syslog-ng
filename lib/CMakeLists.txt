add_subdirectory(compat)
add_subdirectory(control)
add_subdirectory(filter)
add_subdirectory(logmsg)
add_subdirectory(logproto)
add_subdirectory(parser)
add_subdirectory(rewrite)
add_subdirectory(stats)
add_subdirectory(template)
add_subdirectory(transport)
add_subdirectory(value-pairs)

set (LIB_HEADERS
    lib/afinter.h
    lib/alarms.h
    lib/apphook.h
    lib/atomic.h
    lib/block-ref-parser.h
    lib/cache.h
    lib/cfg.h
    lib/cfg-lexer.h
    lib/cfg-lexer-subst.h
    lib/cfg-args.h
    lib/cfg-parser.h
    lib/cfg-tree.h
    lib/children.h
    lib/crypto.h
    lib/dnscache.h
    lib/driver.h
    lib/fdhelpers.h
    lib/file-perms.h
    lib/find-crlf.h
    lib/gprocess.h
    lib/gsockaddr.h
    lib/gsocket.h
    lib/hostname.h
    lib/host-resolve.h
    lib/logmatcher.h
    lib/logmpx.h
    lib/logpipe.h
    lib/logqueue-fifo.h
    lib/logqueue.h
    lib/logreader.h
    lib/logsource.h
    lib/logstamp.h
    lib/logthrdestdrv.h
    lib/logwriter.h
    lib/mainloop.h
    lib/mainloop-call.h
    lib/mainloop-worker.h
    lib/mainloop-io-worker.h
    lib/module-config.h
    lib/memtrace.h
    lib/messages.h
    lib/ml-batched-timer.h
    lib/msg-format.h
    lib/parse-number.h
    lib/pathutils.h
    lib/persist-state.h
    lib/persistable-state-header.h
    lib/persistable-state-presenter.h
    lib/plugin.h
    lib/plugin-types.h
    lib/poll-events.h
    lib/poll-fd-events.h
    lib/pragma-parser.h
    lib/presented-persistable-state.h
    lib/reloc.h
    lib/rcptid.h
    lib/run-id.h
    lib/scratch-buffers.h
    lib/serialize.h
    lib/service-management.h
    lib/seqnum.h
    lib/str-format.h
    lib/str-utils.h
    lib/syslog-names.h
    lib/syslog-ng.h
    lib/string-list.h
    lib/tags.h
    lib/timeutils.h
    lib/tls-support.h
    lib/thread-utils.h
    lib/tlscontext.h
    lib/type-hinting.h
    lib/uuid.h
    lib/userdb.h
    lib/utf8utils.h
    lib/versioning.h
    lib/bookmark.h
    lib/ringbuffer.h
    lib/ack_tracker.h
    lib/host-id.h
    ${COMPAT_HEADERS}
    ${CONTROL_HEADERS}
    ${FILTER_HEADERS}
    ${LOGMSG_HEADERS}
    ${LOGPROTO_HEADERS}
    ${PARSER_HEADERS}
    ${REWRITE_HEADERS}
    ${STATS_HEADERS}
    ${TEMPLATE_HEADERS}
    ${VALUE_PAIRS_HEADERS}
    ${CMAKE_CURRENT_BINARY_DIR}/cfg-grammar.h
    ${BISON_BlockRefGrammar_OUTPUT_HEADER}
    PARENT_SCOPE)

set(LIB_SOURCES
    lib/afinter.c
    lib/alarms.c
    lib/apphook.c
    lib/block-ref-parser.c
    lib/cache.c
    lib/cfg.c
    lib/cfg-args.c
    lib/cfg-lexer.c
    lib/cfg-lexer-subst.c
    lib/cfg-parser.c
    lib/cfg-tree.c
    lib/children.c
    lib/dnscache.c
    lib/driver.c
    lib/fdhelpers.c
    lib/file-perms.c
    lib/find-crlf.c
    lib/globals.c
    lib/gprocess.c
    lib/gsockaddr.c
    lib/gsocket.c
    lib/hostname.c
    lib/host-resolve.c
    lib/logmatcher.c
    lib/logmpx.c
    lib/logpipe.c
    lib/logqueue.c
    lib/logqueue-fifo.c
    lib/logreader.c
    lib/logsource.c
    lib/logstamp.c
    lib/logthrdestdrv.c
    lib/logwriter.c
    lib/mainloop.c
    lib/mainloop-call.c
    lib/mainloop-worker.c
    lib/mainloop-io-worker.c
    lib/module-config.c
    lib/memtrace.c
    lib/messages.c
    lib/ml-batched-timer.c
    lib/msg-format.c
    lib/parse-number.c
    lib/pathutils.c
    lib/persist-state.c
    lib/plugin.c
    lib/poll-events.c
    lib/poll-fd-events.c
    lib/pragma-parser.c
    lib/persistable-state-presenter.c
    lib/rcptid.c
    lib/reloc.c
    lib/run-id.c
    lib/scratch-buffers.c
    lib/serialize.c
    lib/service-management.c
    lib/str-format.c
    lib/str-utils.c
    lib/syslog-names.c
    lib/string-list.c
    lib/tags.c
    lib/timeutils.c
    lib/type-hinting.c
    lib/ringbuffer.c
    lib/late_ack_tracker.c
    lib/early_ack_tracker.c
    lib/crypto.c
    lib/tlscontext.c
    lib/uuid.c
    lib/userdb.c
    lib/utf8utils.c
    lib/host-id.c
    ${COMPAT_SOURCES}
    ${CONTROL_SOURCES}
    ${FILTER_SOURCES}
    ${LOGMSG_SOURCES}
    ${LOGPROTO_SOURCES}
    ${PARSER_SOURCES}
    ${REWRITE_SOURCES}
    ${STATS_SOURCES}
    ${TEMPLATE_SOURCES}
    ${VALUE_PAIRS_SOURCES}
    ${CMAKE_CURRENT_BINARY_DIR}/cfg-grammar.c
    ${BISON_BlockRefGrammar_OUTPUT_SOURCE}
    ${FLEX_CfgLexer_OUTPUTS}
    PARENT_SCOPE)

set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/cfg-grammar.h GENERATED)
set_source_files_properties(${CMAKE_CURRENT_BINARY_DIR}/cfg-grammar.c GENERATED)

bison_target(CfgGrammar lib/cfg-grammar.y ${CMAKE_CURRENT_BINARY_DIR}/lib/cfg-grammar.c COMPILE_FLAGS ${BISON_FLAGS})
add_flex_bison_dependency(CfgLexer CfgGrammar)
